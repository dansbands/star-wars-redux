{"version":3,"sources":["img/bb8.gif","img/logo2.jpg","actions/personAction.js","constants/index.js","components/PersonPicker.jsx","components/FilmCard.jsx","components/FilmModal.jsx","App.js","reducers/rootReducer.js","reducers/personReducer.js","sagas/personSaga.js","index.js"],"names":["module","exports","getPerson","data","type","getPersonSuccess","payload","films","PersonPicker","state","characters","selectedCharacter","dropdownOpen","toggle","setState","prevState","renderDropdownItems","map","ch","key","url","value","name","handleChange","e","find","target","props","this","onChange","defaultValue","disabled","React","Component","FilmCard","formatDate","date","day","getDayOfWeek","year","split","shift","push","join","dayOfWeek","Date","getDay","isNaN","rowClass","row","rowImage","numeral","film","episode_id","source","title","className","onClick","md","src","alt","release_date","FilmModal","isOpen","modal","toggleModal","director","producer","opening_crawl","color","App","person","currentFilm","loading","showLoader","sortFilms","sort","a","b","renderFilms","length","f","pickFilm","style","setTimeout","toggleRow","gridClass","logo2","width","loader","connect","personReducer","dispatch","bindActionCreators","combineReducers","action","getFilms","getPersonSaga","fetch","then","res","json","put","newFilms","replace","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.362b38f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bb8.9a88c58c.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo2.12ba8707.jpg\";","import {\n  GET_PERSON_START,\n  GET_PERSON_SUCCESS,\n  GET_PERSON_FAILURE,\n  GET_FILMS_START,\n  GET_FILMS_SUCCESS,\n  GET_FILMS_FAILURE\n} from \"../constants\";\n\nexport function getPerson(data) {\n  return {\n    type: GET_PERSON_START,\n    data\n  };\n}\n\nexport function getPersonSuccess(payload) {\n  getFilms(payload);\n  return {\n    type: GET_PERSON_SUCCESS,\n    payload\n  };\n}\n\nexport function getPersonFailure(errors) {\n  return {\n    type: GET_PERSON_FAILURE,\n    payload: errors\n  };\n}\n\nexport function getFilms(data) {\n  return {\n    type: GET_FILMS_START,\n    data: data.films\n  };\n}\n\nexport function getFilmsSuccess(payload) {\n  return {\n    type: GET_FILMS_SUCCESS,\n    payload\n  };\n}\n\nexport function getFilmsFailure(errors) {\n  return {\n    type: GET_FILMS_FAILURE,\n    payload: errors\n  };\n}\n","export const GET_PERSON_START = \"GET_PERSON_START\"\nexport const GET_PERSON_SUCCESS = \"GET_PERSON_SUCCESS\"\nexport const GET_PERSON_FAILURE = \"GET_PERSON_FAILURE\"\n\nexport const GET_FILMS_START = \"GET_FILMS_START\"\nexport const GET_FILMS_SUCCESS = \"GET_FILMS_SUCCESS\"\nexport const GET_FILMS_FAILURE = \"GET_FILMS_FAILURE\"\n","import React from 'react'\nimport characters from '../utils/characters.json'\nimport { Input, FormGroup } from 'reactstrap'\n\nclass PersonPicker extends React.Component {\n  state = {\n    characters: [],\n    selectedCharacter: '',\n    dropdownOpen: false\n  }\n\n  componentDidMount() {\n    this.setState({ characters: characters.characters })\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  renderDropdownItems = () => {\n    let newChar = this.state.characters.map(ch => {\n      return <option key={ch.url} value={ch.name}>{ch.name}</option>\n    })\n    return newChar\n  }\n\n  handleChange = e => {\n    // console.log('Changing Dropdown', e.target.value);\n    let selectedCharacter = characters.characters.find(ch => ch.name === e.target.value)\n    this.setState({ selectedCharacter })\n    this.props.handleChange(selectedCharacter)\n  }\n\n  render() {\n    // console.log('PersonPicker', this.state);\n    return (\n      <FormGroup>\n        <Input \n          type=\"select\"\n          name=\"select\"\n          onChange={this.handleChange}\n          defaultValue=\"Choose a character\"\n        >\n\n        <option value=\"Choose a character\" disabled>Choose a Character...</option>\n        {this.renderDropdownItems()}\n\n        </Input>\n      </FormGroup>\n    )\n  }\n}\n\nexport default PersonPicker;\n","import React from 'react'\nimport { Col, Row } from 'reactstrap'\n\nclass FilmCard extends React.Component {\n  formatDate = (date) => {\n    const months = {\n      '01': 'January',\n      '02': 'February',\n      '03': 'March',\n      '04': 'April',\n      '05': 'May',\n      '06': 'June',\n      '07': 'July',\n      '08': 'August',\n      '09': 'September',\n      '10': 'October',\n      '11': 'November',\n      '12': 'December'\n    }\n    let day = this.getDayOfWeek(date)\n    date = date.split('-')\n    let year = date.shift()\n    date.push(year)\n    date[0] = months[date[0]]\n    date = date.join(' ')\n    date = `${day}, ${date}`\n    return date\n  }\n\n  getDayOfWeek = (date) => {\n    let dayOfWeek = new Date(date).getDay();\n    return isNaN(dayOfWeek) ? null : ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][dayOfWeek];\n  }\n\n  render() {\n    // console.log(\"FilmCard Props\", this.props);\n    let rowClass = this.props.row ? \"movie-row\" : \"movie-card\"\n    let rowImage = this.props.row ? \"image-row\" : \"image-card\"\n    let roman = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\n    let numeral = roman[this.props.film.episode_id - 1]\n    let source = `https://dansbands.github.io/star-wars/img/posters/${this.props.film.episode_id}.jpg`\n    return (\n      <div key={this.props.film.title} className={rowClass} onClick={this.props.onClick}>\n        {this.props.row ? (\n          <Row className=\"movie-row-content align-middle\">\n            <Col md={2}>\n              <img src={source} alt=\"poster\" className={rowImage} />\n            </Col>\n            <Col md={5} className=\"text-left align-middle\">\n              <h3>Episode {numeral}: {this.props.film.title}</h3>\n            </Col>\n            <Col md={5} className=\"text-left align-middle\">\n              <h3>Release Date: {this.formatDate(this.props.film.release_date)}</h3>\n            </Col>\n          </Row>\n        ) : (\n            <div>\n              <img src={source} alt=\"poster\" className={rowImage} />\n              <div className=\"movie-caption\">\n                <h6>Episode {numeral}: </h6>\n                <h4>{this.props.film.title}</h4>\n                <h6>Release Date: {this.formatDate(this.props.film.release_date)}</h6>\n              </div>\n            </div>\n          )}\n      </div>\n    )\n  }\n}\n\nexport default FilmCard;\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, Row } from 'reactstrap';\n\nclass FilmModal extends React.Component {\n  formatDate = (date) => {\n    const months = {\n      '01': 'January',\n      '02': 'February',\n      '03': 'March',\n      '04': 'April',\n      '05': 'May',\n      '06': 'June',\n      '07': 'July',\n      '08': 'August',\n      '09': 'September',\n      '10': 'October',\n      '11': 'November',\n      '12': 'December'\n    }\n    let day = this.getDayOfWeek(date)\n    date = date.split('-')\n    let year = date.shift()\n    date.push(year)\n    date[0] = months[date[0]]\n    date = date.join(' ')\n    date = `${day}, ${date}`\n    return date\n  }\n\n  getDayOfWeek = (date) => {\n    let dayOfWeek = new Date(date).getDay();\n    return isNaN(dayOfWeek) ? null : ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][dayOfWeek];\n  }\n\n  render() {\n    let { data } = this.props\n    let roman = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\n    let numeral = roman[data.episode_id - 1]\n    let source = `https://dansbands.github.io/star-wars/img/posters/${data.episode_id}.jpg`\n    // console.log(\"FilmModal Props\", this.props);\n\n    return (\n      <div>\n        <Modal isOpen={this.props.modal} toggle={this.props.toggleModal} className=\"film-modal modal-lg\">\n          <ModalHeader toggle={this.props.toggleModal}>\n            {data && data.release_date &&\n              <div>\n                <h3>Episode {numeral}: {data.title}</h3>\n                <h5>Release Date: {this.formatDate(data.release_date)}</h5>\n              </div>\n            }\n          </ModalHeader>\n          <ModalBody>\n            <Row>\n              <Col md={4}>\n                <img src={source} alt=\"poster\" className=\"image-card\" />\n              </Col>\n              <Col md={8}>\n                <h6>Director: {data.director}</h6>\n                <h6>Producer: {data.producer}</h6>\n                <div className=\"crawl\">\n                  {data.opening_crawl}\n                </div>\n              </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.props.toggleModal}>Close</Button>{' '}\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default FilmModal;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getPerson } from './actions/personAction'\n\nimport './css/App.css';\nimport PersonPicker from './components/PersonPicker'\nimport FilmCard from './components/FilmCard'\nimport FilmModal from './components/FilmModal'\nimport ViewGridIcon from 'mdi-react/ViewGridIcon';\nimport FormatListBulletedIcon from 'mdi-react/FormatListBulletedIcon';\nimport loader from './img/bb8.gif'\nimport logo2 from './img/logo2.jpg'\n\n\nclass App extends React.Component {\n  state = {\n    person: '',\n    currentFilm: {},\n    loading: false,\n    row: false,\n    modal: false\n  }\n\n  handleChange = person => {\n    this.setState({ person: person.name })\n    this.props.getPerson(person)\n    this.showLoader()\n  }\n\n  sortFilms = films => {\n    films = films.sort((a, b) => {\n      if (a.release_date < b.release_date) return -1;\n      if (a.release_date > b.release_date) return 1;\n      return 0;\n    })\n    return films\n  }\n\n  renderFilms = (films) => {\n    let newFilms =\n      films.length ?\n        this.sortFilms(films).map(f => {\n          return <FilmCard\n            onClick={() => this.pickFilm(f)}\n            film={f}\n            row={this.state.row}\n            key={f.episode_id} />\n        })\n        : <span style={{ \"margin\": \"20px auto\" }}>\n            No films listed\n          </span>\n    return newFilms\n  }\n\n  showLoader = () => {\n    this.setState({ loading: true })\n    setTimeout(() => this.setState({ loading: false }), 1000)\n  }\n\n  toggleRow = () => {\n    this.setState({ row: !this.state.row })\n  }\n\n  toggleModal = () => {\n    this.setState({ modal: !this.state.modal })\n  }\n\n  pickFilm = currentFilm => {\n    this.setState({ currentFilm })\n    this.toggleModal()\n  }\n\n  render() {\n    // console.log('state', this.state);\n    // console.log('props', this.props);\n\n    let rowClass = this.state.row ? \"active\" : \"inactive\"\n    let gridClass = this.state.row ? \"inactive\" : \"active\"\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo2} alt=\"Movie Poster\" width=\"150px\" />\n          <div className=\"App-header-center\">\n            <PersonPicker handleChange={this.handleChange} />\n          </div>\n          <div className=\"App-header-right\">\n            <ViewGridIcon onClick={this.toggleRow} className={gridClass} />\n            <FormatListBulletedIcon onClick={this.toggleRow} className={rowClass} />\n          </div>\n        </header>\n\n        {this.props.loading || this.state.loading ?\n          <div className=\"movies\">\n            <img src={loader} width=\"200px\" alt=\"loading\" className=\"loader\" />\n          </div> : null\n        }\n\n        {this.state.person && !this.state.loading &&\n          <h3 className=\"subheader-caption\">Films that {this.state.person} appears in:</h3>\n        }\n\n        {this.props.loading === false &&\n        this.props.films &&\n        !!this.props.films.length &&\n          <div className=\"movies\">\n            {this.renderFilms(this.props.films)}\n          </div>\n        }\n\n        {this.props.loading === false &&\n        this.state.loading === false &&\n        this.props.films &&\n        this.props.films.length === 0 &&\n          'No films available'}\n\n        {!this.props.person &&\n          <div className=\"welcome\">\n            <div className=\"welcome-inner\">\n              <h1>Welcome!</h1>\n              <h2>Choose a Character</h2>\n              <h2>Using the Menu Above</h2>\n            </div>\n          </div>\n        }\n\n        <FilmModal\n          modal={this.state.modal}\n          toggleModal={this.toggleModal}\n          data={this.state.currentFilm} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.personReducer.loading,\n    person: state.personReducer.person,\n    films: state.personReducer.films\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators( { getPerson }, dispatch )\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport personReducer from './personReducer';\nexport default combineReducers({\n  personReducer\n});","import {\n  GET_PERSON_START,\n  GET_PERSON_SUCCESS,\n  GET_FILMS_SUCCESS,\n} from \"../constants\";\n\nexport default (state = { loading: false, person: false }, action) => {\n  switch (action.type) {\n    case GET_PERSON_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_PERSON_SUCCESS:\n      return {\n        ...state,\n        person: action.payload\n      };\n    case GET_FILMS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        films: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  getPersonSuccess,\n  getPersonFailure,\n  getFilmsSuccess,\n  getFilmsFailure\n} from \"../actions/personAction\";\n\nimport { GET_PERSON_START, GET_FILMS_START } from \"../constants\";\n\nfunction* getPerson(action) {\n  try {\n    const payload = yield fetch(action.data.url).then(res => res.json());\n    yield getFilms({ type: GET_FILMS_START, payload });\n    yield put(getPersonSuccess(payload));\n  } catch (error) {\n    yield put(getPersonFailure(error));\n  }\n}\n\nfunction* getFilms(action) {\n  try {\n    let newFilms = [];\n    if (action.payload.films) {\n      action.payload.films.map(f => {\n        f = f.replace(\"http\", \"https\")\n        return fetch(f).then(res =>\n          res.json().then(data => newFilms.push(data))\n        );\n      });\n    }\n    yield put(getFilmsSuccess(newFilms));\n  } catch (error) {\n    yield put(getFilmsFailure(error));\n  }\n}\n\nexport default function* getPersonSaga() {\n  yield takeLatest(GET_PERSON_START, getPerson);\n  yield takeLatest(GET_FILMS_START, getFilms);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\n// import configureStore from './store';\nimport rootReducer from './reducers/rootReducer';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport getPersonSaga from './sagas/personSaga';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware)\n)\n\nsagaMiddleware.run(getPersonSaga)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}